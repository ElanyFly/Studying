/**
 * 7. Написать метод, которому на вход подается одномерный массив и число n (может быть положительным или отрицательным),
 * при этом метод должен сместить все элементы массива на n позиций. Нельзя пользоваться вспомогательными массивами.
 */
public class Less02MassT7 {


    public static void main(String[] args) {

        int[] table = {2, 4, 0, 4, 1, 7, 3};

        tableMove(table, 1);

        System.out.println();
        for (int j : table) {
            System.out.print(j + "\t");
        }
    }


    public static void tableMove(int[] arr, int n) { //описана первая итерация
        for (int i = 0; i < n; i++){            // тут мы открыли цикл для всего массива, где говорится, сколько раз (n) он сделает указанное дальше условие
            int remember = arr[0];              // задали переменную, которая будет хранить в себе первое число из массива
            int carry = 0;                      // задали переменную, которая, в будущем будет держать в себе число из указанной в count ячейки массива
            int count = 0;                      // -переменная, отвечающая за номер ячейки массива .. по факту это номер итерации, которая так же задает и ячейку массива
            boolean isLessThenLenth = true;     // задаем условие, которым будем отслеживать, чтобы наш массив не превысил изначальную длину
            while (isLessThenLenth){            // создаем условие, по которому, пока оно выполняется, тело условия будет делаться по кругу(в цикле)
                if (count >= arr.length) {      // создаем доп условие, чтобы в последствии прервать цикл while. Следим, чтобы count, не превысил длину массива
                    arr[0] = remember;          // если длина массива превысилась, мы кладем в первую ячейку массива число сохраненное в remember
                    isLessThenLenth = false;    // После чего объявляем, что условие больше не выполняется, объявляя его ложным.
                } else {                        // -Пока условие является ложным (рядом с if), выполняем указанные ниже действия.
                    carry = arr[count];         // сохраняем в переменной carry число лежащее в arr[count] (на первом круге, это будет число в нулевой ячейке массива). Теперь carry является этим число
                    arr[count] = remember;      // -в сам arr[count] мы помещаем число, некогда лежавшее в нулевой ячейке массива, которое мы сохранили при создании переменной. Теперь arr[count] владеет этим числом
                    remember = carry;           // сказали, что теперь remember будет помнить число, из переменной carry. remember станет значением carry, в котором содержалост число из 1ой ячеки (arr[count])
                }
                count++;                        // увеличили count на 1, таким образом, перешли к следующей ячейке массива (изначально было 0, перешли к 1ой)
            }
        }
    }
}



